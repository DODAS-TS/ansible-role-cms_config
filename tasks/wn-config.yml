---
# tasks file for cms_config
- name: install cvmfs repo
  apt: deb=https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
  tags: cms_config

- name: Install cvmfs packages
  apt: name={{item}} state=present update_cache=yes
  with_items:
       - cvmfs
       - cvmfs-config-default
  tags: cms_config

- name: create/update file /etc/cvmfs/default.local
  blockinfile:
    dest: /etc/cvmfs/default.local
    create: yes
    content: |
      CVMFS_HTTP_PROXY={{cms_config_cvmfs_http_proxy}}
      CVMFS_REPOSITORIES={{cms_config_cvmfs_repositories}}
  tags: cms_config


- name: create necessary dirs
  file:  path={{item}} state=directory mode=0755
  with_items:
    - /opt/exp_sw/cms
  tags: cms_config

- name: set CMS_LOCAL_SITE variable
  lineinfile: dest=/etc/cvmfs/config.d/cms.cern.ch.conf create=yes line="export CMS_LOCAL_SITE=/opt/exp_sw/cms"  
  tags: cms_config

- name: Enable user_allow_other in fuse.conf
  lineinfile: dest=/etc/fuse.conf line="user_allow_other" state=present
  tags: cms_config

- name: wait for cms squid to be up and running (ansible > 2.1.0.0)
  wait_for: 
     host: "{{cms_config_mysquid_host}}" 
     port: "{{cms_config_mysquid_port}}"
     delay: 20
     timeout: 600
  when: ansible_version > "2.1.0.0"
  tags:
    - cms_config

- name: wait for cms squid to be up and running using nc 
  command: nc -z {{cms_config_mysquid_host}} {{cms_config_mysquid_port}}
  register: result
  until: result.rc == 0
  delay: 20
  retries: 40
  when: ansible_version <= "2.1.0.0"
  tags:
    - cms_apps

- name: Stop autofs
  service: name=autofs state=stopped
  tags: cms_config

- name: Creates CVMFS mountpoint
  file: path=/cvmfs/cms.cern.ch state=directory owner=cvmfs group=cvmfs recurse=yes
  tags: cms_config

- name: mount CVMFS
  command: mount -t cvmfs cms.cern.ch /cvmfs/cms.cern.ch/
  register: result
  until: result | success
  retries: 10
  delay: 10
  tags: cms_config

- name: Set wide-system environment vars
  blockinfile:
    dest: /etc/environment
    create: yes
    content: |
      CMS_LOCAL_SITE={{cms_config_cms_local_site}}
      MYSQUID={{cms_config_mysquid}}
      STAGEOUTSITE={{cms_config_stageoutsite}}
      STAGEOUTSERVER={{cms_config_stageoutserver}}
      STAGEOUTPREFIX={{cms_config_stageoutprefix}}
  tags: cms_config

- name: copy the content of T3_IT_Opportunistic into /opt/exp_sw/cms/
  shell: cp -r -u /cvmfs/cms.cern.ch/SITECONF/T3_IT_Opportunistic/* /opt/exp_sw/cms/
  tags: cms_config

- name: Update site-local-config.xml
  replace: dest=/opt/exp_sw/cms/JobConfig/site-local-config.xml regexp='{{item.regexp}}' replace='{{item.replace}}' backup=yes
  with_items:
    - { regexp: '/cvmfs/cms.cern.ch/SITECONF/T3_IT_Opportunistic', replace: '/cvmfs/cms.cern.ch/SITECONF/{{cms_config_stageoutsite}}'} 
    - { regexp: 'T3_IT_Opportunistic', replace: '{{cms_config_cms_local_site}}'}
    - { regexp: 'T2_IT_Pisa', replace: '{{cms_config_stageoutsite}}' }
    - { regexp: 'stormfe1.pi.infn.it', replace: '{{cms_config_stageoutserver}}'}
    - { regexp: 'T1_IT_CNAF_Disk', replace: '{{cms_config_stageoutsite_bkp}}' }
    - { regexp: 'srm://storm-fe-cms.cr.cnaf.infn.it:8444/srm/managerv2?SFN=/cmsdisk/', replace: '{{cms_config_stageoutprefix}}'}
    - { regexp: 'storm-fe-cms.cr.cnaf.infn.it', replace: '{{cms_config_stageoutserver_bkp}}'}
  tags: cms_config

